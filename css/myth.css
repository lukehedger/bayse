@import "normalize.css";
@import "grid.css";
@import "print.css";

/* ==========================================================================
   LAYOUT
   ========================================================================== */
section[role="document"]{
	margin-bottom: 100px;
	padding:0 5%;
}

/* ==========================================================================
   ELEMENTS
   ========================================================================== */

/* buttons etc */

/* OVERLAY */
body.modal-open {
	overflow: hidden;
}
.overlay {
	background-color: #000;
	opacity: 0.8;
	filter: alpha(opacity=0.8);
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 1000;
}

/* ==========================================================================
   SECTIONS
   ========================================================================== */


/* ==========================================================================
   RESPONSIVE
   ========================================================================== */

/* Responsive IMAGES */

img{max-width: 100%;}
img.resp-img {margin: 0 auto;width: 100%;max-width: 50em; /* 800px */}

/* Responsive VIDEO */

video{max-width: 100%;} /* Scale an HTML5 video element within a fluid layout */

/* This padding is used to supply the necessary height of the video container. Height is then set to 0.
 * The video has an aspect ratio of 16:9 so the height is 56.25% of the width - 9 / 16 = 0.5625 x 100
 * Position relative is specified so the contained element can then ignore this padding */
.video-wrap{width:100%;height:0;padding-bottom: 56.25%;position:relative;}

/* These styles allow the contained element - the embedded object - to fill the container div and ignore its padding */
.video-wrap iframe{width:100%;height:100%;position:absolute;}

/* em widths can be calculated using the target / context rule.
 * The target in this case is the page width in px and the context is the body font-size, which is 1em=16px
 * The widths used - and the resultant section styles - will depend upon the page content. There's no use templating this.
 * Below are some general device-centric breakpoints
*/

/* Desktop */
@media only screen and (min-width: 48em) { /* 768px */

}

/* Tablet etc */
@media only screen and (max-width:47.99em) { /* 767px */

}

/* Mobile */
@media only screen and (max-width:20em) { /* 320px */

}

@media only screen and (-webkit-min-device-pixel-ratio: 2),
only screen and (-o-min-device-pixel-ratio: 2/1),
only screen and (min--moz-device-pixel-ratio: 2),
only screen and (min-resolution: 2dppx),
only screen and (min-resolution: 192dpi) {
	/* Style adjustments for high resolution devices */

	/* Add background-size: cover; to retina bckg img elements */
	.retina{
		/*background-image:url('../img/logo@2x.png');*/
	}
}
